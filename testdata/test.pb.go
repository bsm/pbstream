// Code generated by protoc-gen-gogo.
// source: testdata/test.proto
// DO NOT EDIT!

/*
Package testdata is a generated protocol buffer package.

It is generated from these files:
	testdata/test.proto

It has these top-level messages:
	Message
*/
package testdata

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	S string `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	N int32  `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	// Types that are valid to be assigned to V:
	//	*Message_U
	//	*Message_B
	V isMessage_V `protobuf_oneof:"v"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptorTest, []int{0} }

type isMessage_V interface {
	isMessage_V()
}

type Message_U struct {
	U uint32 `protobuf:"fixed32,3,opt,name=u,proto3,oneof"`
}
type Message_B struct {
	B bool `protobuf:"varint,4,opt,name=b,proto3,oneof"`
}

func (*Message_U) isMessage_V() {}
func (*Message_B) isMessage_V() {}

func (m *Message) GetV() isMessage_V {
	if m != nil {
		return m.V
	}
	return nil
}

func (m *Message) GetS() string {
	if m != nil {
		return m.S
	}
	return ""
}

func (m *Message) GetN() int32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *Message) GetU() uint32 {
	if x, ok := m.GetV().(*Message_U); ok {
		return x.U
	}
	return 0
}

func (m *Message) GetB() bool {
	if x, ok := m.GetV().(*Message_B); ok {
		return x.B
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_U)(nil),
		(*Message_B)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// v
	switch x := m.V.(type) {
	case *Message_U:
		_ = b.EncodeVarint(3<<3 | proto.WireFixed32)
		_ = b.EncodeFixed32(uint64(x.U))
	case *Message_B:
		t := uint64(0)
		if x.B {
			t = 1
		}
		_ = b.EncodeVarint(4<<3 | proto.WireVarint)
		_ = b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("Message.V has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 3: // v.u
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.V = &Message_U{uint32(x)}
		return true, err
	case 4: // v.b
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.V = &Message_B{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// v
	switch x := m.V.(type) {
	case *Message_U:
		n += proto.SizeVarint(3<<3 | proto.WireFixed32)
		n += 4
	case *Message_B:
		n += proto.SizeVarint(4<<3 | proto.WireVarint)
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Message)(nil), "testdata.Message")
}

func init() { proto.RegisterFile("testdata/test.proto", fileDescriptorTest) }

var fileDescriptorTest = []byte{
	// 121 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x49, 0x2d, 0x2e,
	0x49, 0x49, 0x2c, 0x49, 0xd4, 0x07, 0x31, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38, 0x60,
	0x82, 0x4a, 0x5e, 0x5c, 0xec, 0xbe, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0x42, 0x3c, 0x5c, 0x8c,
	0xc5, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x8c, 0xc5, 0x20, 0x5e, 0x9e, 0x04, 0x93, 0x02,
	0xa3, 0x06, 0x6b, 0x10, 0x63, 0x9e, 0x10, 0x1f, 0x17, 0x63, 0xa9, 0x04, 0xb3, 0x02, 0xa3, 0x06,
	0xbb, 0x07, 0x43, 0x10, 0x63, 0x29, 0x88, 0x9f, 0x24, 0xc1, 0xa2, 0xc0, 0xa8, 0xc1, 0x01, 0xe2,
	0x27, 0x39, 0x31, 0x73, 0x31, 0x96, 0x25, 0xb1, 0x81, 0x0d, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0xe8, 0x01, 0x56, 0x6f, 0x73, 0x00, 0x00, 0x00,
}
